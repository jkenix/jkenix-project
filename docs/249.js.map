{"version":3,"file":"249.js","mappings":"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","sources":["webpack:///./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack:///./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack:///./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack:///./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack:///./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack:///./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack:///./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack:///./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/array.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack:///./node_modules/framer-motion/dist/es/value/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack:///./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack:///./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/back.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack:///./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack:///./node_modules/framer-motion/dist/es/debug/record.mjs","webpack:///./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack:///./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack:///./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack:///./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack:///./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack:///./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack:///./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack:///./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","useContext","layoutId","useLayoutId","context","initial","undefined","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","subscriptions","add","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","delta","timestamp","frameData","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","ease","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","remaining","offsetProgress","fillOffset","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","exp","d","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","hasRepeatDelayElapsed","reverseElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","cancel","timeout","performance","now","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","makeTargetAnimatable","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","setTarget","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","resolveCSSVariables","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}